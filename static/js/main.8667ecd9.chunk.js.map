{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addVariables","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","_this$state","variableName","variableQuest","variableType","variables","wrap","_context","prev","next","state","push","setState","stop","_x","apply","arguments","handleChangeTextRule","_ref2","_callee2","type","_event$target","text","variable","operatorT","test","endsWith","_context2","console","log","target","name","value","abrupt","textRule","selectedOperatorL","selectedVarIn","selectedOperatorT","_x2","_x3","var","rul","rules","selectedVarOut","_this2","react_default","createElement","className","id","style","height","width","margin","color","backgroundColor","display","flexDirection","justifyContent","alignItems","boxShadow","fontSize","position","paddingLeft","paddingRight","Button_default","variant","fullWidth","marginTop","onClick","_","Icon_default","marginRight","marginLeft","paddingTop","map","e","index","key","borderBottom","textAlign","size","alignSelf","filter","ind","Dialog_default","open","onClose","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","DialogTitle_default","DialogContent_default","FormControl_default","minWidth","InputLabel_default","htmlFor","Select_default","onChange","inputProps","MenuItem_default","TextField_default","label","DialogActions_default","InputProps","readOnly","autoWidth","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8667ecd9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      var: false,\n      rul: false,\n      variables: [],\n      rules: [],\n      variableName: \"\",\n      variableQuest: \"\",\n      variableType: \"Entrada\",\n      textRule: \"\",\n      selectedVarIn: \"\",\n      selectedVarOut: \"\",\n      selectedOperatorT: \"\",\n      selectedOperatorL: \"\",\n      test: \"\",\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"header\" style={{ height: \"10%\", width: \"100%\", margin: \"0px\", color: \"white\", backgroundColor: \"#272822\", display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", boxShadow: \"0px 5px 100px black\" }}>\n          <h1>reactSint</h1>\n        </div>\n        <div\n          style={{ fontSize: \"4px\", position: \"absolute\", width: \"150px\", paddingLeft: \"5px\", paddingRight: \"5px\", height: \"90%\", margin: \"0px\", color: \"black\", backgroundColor: \"white\", display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\", alignItems: \"center\", boxShadow: \"0px 0px 3px black\" }}\n        >\n          <Button variant=\"contained\" color=\"primary\" fullWidth style={{ marginTop: \"15px\" }} onClick={_ => this.setState({ var: true })}>\n            <Icon style={{ marginRight: \"10px\", marginLeft: \"0px\" }}>add_circle</Icon> variaveis\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" fullWidth style={{ marginTop: \"15px\" }} onClick={_ => this.setState({ rul: true })} >\n            <Icon style={{ marginRight: \"10px\", marginLeft: \"-10px\" }}>add_circle</Icon> regras\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" fullWidth style={{ marginTop: \"15px\" }} >\n            <Icon style={{ marginRight: \"10px\" }}>play_arrow</Icon> Executar\n          </Button>\n\n\n        </div>\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", paddingLeft: \"160px\", paddingTop: \"25px\", paddingRight: \"10px\" }}>\n\n          <div className=\"main\" style={{ width: \"40%\" }}>\n            <h5>Variáveis de Entrada</h5>\n            {this.state.variables.map((e, index) => {\n              if (e.variableType !== \"Entrada\") return null\n              return (\n                <div key={index} style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"15px\", borderBottom: \"1px dashed gray\" }}>\n                  <div style={{ width: \"95%\", textAlign: \"left\" }}>\n                    <h6>Variável: {e.variableName}</h6>\n                    <h6>Pergunta: {e.variableQuest}</h6>\n                  </div>\n                  <div>\n                    <Button variant=\"contained\" color=\"secondary\" size=\"small\" style={{ alignSelf: \"flex-start\" }} onClick={_ => this.setState({ variables: this.state.variables.filter((e, ind) => { return ind !== index }) })}>\n                      <Icon>delete</Icon>\n                    </Button>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"main\" style={{ width: \"40%\" }}>\n            <h5>Variáveis de Saída</h5>\n            {this.state.variables.map((e, index) => {\n              if (e.variableType !== \"Saida\") return null\n              return (\n                <div key={index} style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"15px\", borderBottom: \"1px dashed gray\" }}>\n                  <div style={{ width: \"95%\", textAlign: \"left\" }}>\n                    <h6>Variável: {e.variableName}</h6>\n                    <h6>Mensagem: {e.variableQuest}</h6>\n                  </div>\n                  <div>\n                    <Button variant=\"contained\" color=\"secondary\" size=\"small\" style={{ alignSelf: \"flex-start\" }} onClick={_ => this.setState({ variables: this.state.variables.filter((e, ind) => { return ind !== index }) })}>\n                      <Icon>delete</Icon>\n                    </Button>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n        <Dialog\n          open={this.state.var}\n          onClose={_ => this.setState({ var: false })}\n          disableBackdropClick\n          disableEscapeKeyDown\n          aria-labelledby=\"scroll-dialog-title\"\n        >\n          <DialogTitle id=\"scroll-dialog-title\">Adcionar Variáveis</DialogTitle>\n          <DialogContent>\n\n            <FormControl style={{ minWidth: 120 }}>\n              <InputLabel htmlFor=\"tipo\">Tipo</InputLabel>\n              <Select\n                value={this.state.variableType}\n                onChange={event => this.setState({ variableType: event.target.value })}\n                inputProps={{\n                  name: 'Tipo',\n                  id: 'tipo',\n                }}\n              >\n                <MenuItem value=\"Entrada\">Entrada</MenuItem>\n                <MenuItem value=\"Saida\">Saida</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField fullWidth label=\"Nome\" value={this.state.variableName} onChange={event => this.setState({ variableName: event.target.value })} />\n            <TextField fullWidth label={this.state.variableType === \"Entrada\" ? \"Pergunta\" : \"Mensagem\"} value={this.state.variableQuest} onChange={event => this.setState({ variableQuest: event.target.value })} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={_ => this.setState({ var: false })} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={event => this.addVariables(event)} color=\"primary\">\n              <Icon style={{ marginRight: \"10px\", marginLeft: \"0px\" }}>add_circle</Icon>ADCIONAR\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          open={this.state.rul}\n          onClose={_ => this.setState({ rul: false })}\n          fullWidth\n\n          disableBackdropClick\n          disableEscapeKeyDown\n          aria-labelledby=\"scroll-dialog-title\"\n        >\n          <DialogTitle id=\"scroll-dialog-title\">Adcionar Regras</DialogTitle>\n          <DialogContent>\n\n            {/* <FormControl style={{ minWidth: 120 }}>\n              <InputLabel htmlFor=\"tipo\">Tipo</InputLabel>\n            </FormControl> */}\n            {/* <br /> */}\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\" }}>\n              <span style={{ marginRight: '15px', }}>SE</span>\n              <TextField fullWidth value={this.state.textRule} InputProps={{ readOnly: true, }} onChange={event => this.setState({ variableName: event.target.value })} />\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\" }}>\n              <span style={{ marginRight: '15px', }}>ENTÃO</span>\n              <FormControl >\n                <InputLabel htmlFor=\"saida\">Adicionar Variáveis de Saída</InputLabel>\n                <Select\n                  value={this.state.selectedVarOut}\n                  onChange={event => this.setState({ selectedVarOut: event.target.value })}\n                  fullWidth\n                  autoWidth\n                  style={{ width: \"250px\" }}\n                  inputProps={{\n                    name: \"saida\",\n                    id: 'var',\n                  }}\n                >\n                  <MenuItem value=\"\">\n                    <em>Selecione</em>\n                  </MenuItem>\n                  {this.state.variables.map((e, index) => {\n                    if (e.variableType !== \"Saida\") return null\n                    return (<MenuItem key={index} value={index}>{e.variableName}</MenuItem>)\n                  })}\n                </Select>\n              </FormControl>\n            </div>\n\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\", width: \"100%\" }}>\n              {/* {(this.state.endsWith || this.state.textRule.length === 0) && */}\n                <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\", justifyContent: \"space-around\", }}>\n                  {this.state.textRule &&\n                    <FormControl >\n                      <InputLabel htmlFor=\"operador-logico\">Lógico </InputLabel>\n                      <Select\n                        value={this.state.selectedOperatorL}\n                        onChange={event => this.setState({selectedOperatorL: event.target.value})}\n                        fullWidth\n                        style={{ width: \"100px\" }}\n                        inputProps={{\n                          name: \"operador-logico\",\n                          id: 'operador-logico',\n                        }}\n                      >\n                        <MenuItem value=\"\">\n                          <em>Selecione</em>\n                        </MenuItem>\n                        <MenuItem value=\"AND\">\n                          <em>E - (AND)</em>\n                        </MenuItem>\n                        <MenuItem value=\"OR\">\n                          <em>OU - (OR)</em>\n                        </MenuItem>\n                      </Select>\n                    </FormControl>\n                  }\n                  <FormControl >\n                    <InputLabel htmlFor=\"entrada\">Variáveis</InputLabel>\n                    <Select\n                      value={this.state.selectedVarIn}\n                      onChange={(event) => { this.setState({ selectedVarIn: event.target.value }) }}\n                      //onChange={event => this.handleChangeTextRule(event)}\n                      fullWidth\n                      style={{ width: \"100px\" }}\n                      inputProps={{\n                        name: \"entrada\",\n                        id: 'var',\n                      }}\n                    >\n                      <MenuItem value=\"\">\n                        <em>Selecione</em>\n                      </MenuItem>\n                      {this.state.variables.map((e, index) => {\n                        if (e.variableType !== \"Entrada\") return null\n                        return (<MenuItem key={index} value={index}>{e.variableName}</MenuItem>)\n                      })}\n                    </Select>\n                  </FormControl>\n\n\n                  <FormControl >\n                    <InputLabel htmlFor=\"operador-teste\">Operações</InputLabel>\n                    <Select\n                      value={this.state.selectedOperatorT}\n                      onChange={event => this.setState({ selectedOperatorT: event.target.value })}\n                      //onChange={event => this.handleChangeTextRule(event)}\n                      fullWidth\n                      style={{ width: \"130px\" }}\n                      inputProps={{\n                        name: \"operador-teste\",\n                        id: 'operador-teste',\n                      }}\n                    >\n                      <MenuItem value=\"\">\n                        <em>{\"Selecione\"}</em>\n                      </MenuItem>\n                      <MenuItem value=\">\">\n                        <em>{\"MAIOR QUE ( > )\"}</em>\n                      </MenuItem>\n                      <MenuItem value=\"<\">\n                        <em>{\"MENOR QUE ( < )\"}</em>\n                      </MenuItem>\n                      <MenuItem value=\"==\">\n                        <em>{\"IGUAL     ( == )\"}</em>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                  <TextField inputProps={{ width: \"50px\" }} value={this.state.test} onChange={event => this.setState({ test: event.target.value })} label=\"Valor\" />\n                  <Button size=\"small\" variant=\"text\" id=\"a\" onClick={event => this.handleChangeTextRule(event, \"add\")}><Icon>add_outline</Icon></Button>\n                </div>\n           \n              {/* {this.state.textRule && !this.state.endsWith &&\n                <FormControl >\n                  <InputLabel htmlFor=\"operador\">Adicionar Operador</InputLabel>\n                  <Select\n                    value={this.state.selectedVar}\n                    onChange={event => this.handleChangeTextRule(event)}\n                    fullWidth\n                    style={{ width: \"160px\" }}\n                    inputProps={{\n                      name: \"operador\",\n                      id: 'var',\n                    }}\n                  >\n                    <MenuItem value=\"\">\n                      <em>Selecione</em>\n                    </MenuItem>\n                    <MenuItem value=\"AND\">\n                      <em>E - (AND)</em>\n                    </MenuItem>\n                    <MenuItem value=\"OR\">\n                      <em>OU - (OR)</em>\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              } */}\n              {/* <Button variant=\"contained\"> <em>NÃO - (NOT)</em></Button> */}\n            </div>\n            {/* <TextField fullWidth label={this.state.variableType === \"Entrada\"?\"Pergunta\":\"Mensagem\"} value={this.state.variableQuest} onChange={event => this.setState({ variableQuest: event.target.value })} /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={_ => this.setState({ rul: false })} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button variant=\"contained\" onClick={event => this.addVariables(event)} color=\"primary\">\n              <Icon style={{ marginRight: \"10px\", marginLeft: \"0px\" }}>add_circle</Icon>ADCIONAR\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n  /*-------------------------------------------------*/\n  /*------------- adciona variavél ------------------*/\n  addVariables = async event => {\n    let { variableName, variableQuest, variableType } = this.state;\n    let variables = this.state.variables\n    variables.push({ variableName, variableQuest, variableType })\n    await this.setState({ variables });\n    await this.setState({ variableName: \"\", variableQuest: \"\", variableType: \"Entrada\" });\n  }\n  handleChangeTextRule = async (event, type) => {\n    console.log(event)\n    // @||@ variáveis\n    // #||# Operadores Logico\n    // $||$ Operadores Teste\n    // !||! Operador Negação\n    // *||* Valor de Teste \n    const { name, value } = event.target\n    if (value === \"\") return\n    // switch (name) {\n    //   case \"entrada\": {\n    //     const filtered = this.state.variables[value]\n    //     await this.setState({ textRule: this.state.textRule + \" @|\" + filtered.variableName + \"|@\" })\n    //     break\n    //   }\n    //   case \"operador\": {\n    //     await this.setState({ textRule: this.state.textRule + \" #|\" + value + \"|#\" })\n    //     break\n    //   }\n\n    //   default:\n\n    // }\n\n\n    if (type === \"add\") {\n      let text = \"\"; \n      if(this.state.textRule){\n        text = \" #|\"+this.state.selectedOperatorL+\"|#\"\n      }\n      const variable = this.state.selectedVarIn;\n      const operatorT = this.state.selectedOperatorT;\n      const test = this.state.test;\n      await this.setState({ textRule: this.state.textRule + text + \" @|\" + this.state.variables[variable].variableName + \"|@ $|\" + operatorT + \"|$ *|\" + test + \"|*\" });\n      await this.setState({selectedOperatorL: \"\", selectedOperatorT: \"\", selectedVarIn: \"\",test: \"\"})\n    }\n    const endsWith = this.state.textRule.endsWith('|#')\n    await this.setState({ endsWith })\n\n    // const filtered = this.state.textRule.split(' ');\n    // console.log(filtered)\n    // const len = filtered.length\n    // let operationInIsPair = 1\n    // for(let i = 0; i < len ; i++){\n    //   if(/(@\\|.*?\\|@)/.test(filtered[i])){\n    //     operationInIsPair+=1;\n    //   }\n    // }\n    // operationInIsPair = (operationInIsPair % 2 === 0)\n    // console.log(operationInIsPair)\n\n    // this.setState({operationIsPair: this.state.textRule.length === 0 ? })\n\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}